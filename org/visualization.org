* Plot convergent function
#+begin_src python :results file :var filename="../figs/fig1.png"
  import numpy as np
  import matplotlib.pyplot as plt

  @np.vectorize
  def f(x):
      return (29.0 * x + 6) / (5.0 * x + 1)

  x = np.linspace(0, 20, 20)
  y1 = f(x)
  y2 = [6.0] * len(x)
  y3 = [5.8] * len(x)

  f, ax = plt.subplots()
  ax.plot(x, y1, color = 'orange')
  ax.plot(x, y2, "k--")
  ax.plot(x, y3, "k--")  
  ax.set_xlabel('x')
  ax.set_ylabel('f(x)')
  ax.set_yticks([5.8, 6.0])
  ax.set_title(r'$f(x)=\frac{29x+6}{5x+1}$')
  plt.savefig(filename)  
#+end_src

#+RESULTS:
[[file:None]]

* Plot bilinear convergent function
#+begin_src python :results file :var filename="../figs/fig2.png"
  import matplotlib.pyplot as plt
  import numpy as np
  fig = plt.figure()
  ax = fig.add_subplot(projection='3d')

  @np.vectorize
  def f(x, y):
      return (109.0 * x * y + 21.0 * x + 26.0 * y + 5.0) / (20.0 * x * y + 4 * x + 5 * y + 1)

  X = np.arange(0, 10, 0.1)
  Y = np.arange(0, 10, 0.1)
  X, Y = np.meshgrid(X, Y)
  Z = f(X, Y)
  surf = ax.plot_surface(X, Y, Z)
  ax.set_xlabel('x')
  ax.set_ylabel('y')
  ax.set_zlabel('f(x, y)')
  ax.set_title(r'$f(x, y)=\frac{109xy + 21x + 26y + 5}{20xy + 4x + 5y + 1}$')
  plt.savefig(filename)
#+end_src

#+RESULTS:
[[file:None]]

* Export for convergent tabs

#+begin_src python :exports both :noweb strip-export :results output :dir ../src/
  <<DEMO_IMPORTS>>
  zz=cf_convergents1_tab(islice(cf_e(),10))
  print(zz)
  zz.export_csv('../exports/cf_convergents1_tab_1.csv')
#+end_src

#+RESULTS:
:        1   6   1   1   4   1   1   2   1   2    
:  1457 1264 193 106  87  19  11   8   3   2   1   0
:  536 465  71  39  32   7   4   3   1   1   0   1

#+begin_src python :tangle no :noweb-ref DEMO_IMPORTS
  from cont_frac import *
  from cont_frac_io import *
  from itertools import islice
#+end_src

* Export for transformations

#+begin_src python :exports both :noweb strip-export :results output :dir ../src/
  <<DEMO_IMPORTS>>
  m0 = np.array([[0, 2], [-1, 3]], int)
  zz = cf_transform_tab(cf_sqrt2(), m0 = m0, n = 10, field_width = 3)
  print(zz)
  zz.export_csv('../exports/cf_transform_tab_1.csv')
#+end_src

#+RESULTS:
#+begin_example
     2  2  2  2  2  2  2  2  2  1   
                          4  2  0  2   
                       8  3  2 -1  3  1 
                    5  2  1  0        3 
                10  4  2  0           1 
              5  2  1  0              4 
          10  4  2  0                 1 
        5  2  1  0                    4 
    10  4  2  0                       1 
  5  2  1  0                          4 
  4  2  0                             1 
  1  0                                4 
#+end_example

#+begin_src python :exports both :noweb strip-export :results output :dir ../src/
  <<DEMO_IMPORTS>>
  m0 = np.array([[1, -1], [1, 1]], int)
  zz = cf_transform_tab(cf_e(), m0=m0, n=18, field_width=3)
  print(zz)
  zz.export_csv('../exports/cf_transform_tab_2.csv')
#+end_src

#+RESULTS:
#+begin_example
    12  1  1 10  1  1  8  1  1  6  1  1  4  1  1  2  1  2   
                                                     1  1 -1   
                                                  4  3  1  1  0 
                                        12  7  5  2  1  1     2 
                               20 11  9  2  1  1  0  1        6 
                      28 15 13  2  1  1  0  1                 10
             36 19 17  2  1  1  0  1                          14
    44 23 21  2  1  1  0  1                                   18
 25  2  1  1  0  1                                            22
  1  0  1                                                     25
#+end_example

* Imports
#+begin_src python :tangle no :noweb-ref DEMO_IMPORTS
  from cont_frac import *
  from cont_frac_io import *
  from itertools import islice
#+end_src

